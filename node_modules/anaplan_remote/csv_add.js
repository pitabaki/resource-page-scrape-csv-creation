"use strict";

const htmlToJson = require("html-to-json"),
	url = require("url"),
	fs = require("fs"),
	path = require("path");

let imgCheck = function (obj, printFolder) {
	console.log(obj);
	return false;
	let homeUrl = url.parse(obj.URL).href,
		newUrl = url.parse(obj.NewUrl).href;

	//let homeUrl = url.parse("http://info.anaplan.com/ru-anaplan-platform-wp.html").href;
	if (homeUrl !== undefined && typeof homeUrl !== "undefined" && homeUrl !== "") {
				console.log(homeUrl);
		return false;
		const promise = htmlToJson.request(homeUrl, {
		  'images': ['img', function ($img) {
		  	if ($img.attr('class') === "img-responsive") {
		    	return $img.attr('src');	
		  	}
		  }],
		  'para': ['p', function ($p) {
		  	let spaceCheck = $p.text().replace(/\s\s+/, "");
		  	if ($p !== undefined && spaceCheck.length > 0) {
		  		return $p.text().replace(/\"/gi, "'");	
		  	} else {
		  		return "";
		  	}
		  }]
		}, function (err, result) {
			var paragraphArr = [];
			for (var n = 0; n < result.para.length; n++) {
				if (typeof result.para[n] === "string" && result.para[n].length > 1) {
					let content = result.para[n].replace(/\"/gi, "\"");
					paragraphArr.push("<p>" + content + "</p>");
				}
			}		
			paragraphArr = paragraphArr.join("");
			obj.paragraph = paragraphArr;
			for (var x = 0; x < result.images.length; x++) {
				//resultImg = new imageCheck(result.images[x]);
				var resultImg = result.images[x];
				var logoTest = /anaplan_normal1.png$/; 
				if ((resultImg !== undefined) && (logoTest.test(resultImg) !== true)) {
					//console.log(typeof homeUrl);
					obj.headerImg = resultImg;
					
				}
			}
			console.log(obj);
		});
		//console.log(obj);
		return obj;
	} else {
			return obj;
	}
}

module.exports = imgCheck;