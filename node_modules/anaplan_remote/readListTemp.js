const readURL = require('./readURL'),
	fs = require('fs');

let readListTemp = ( arr, x, printPath ) => {
	let cap = arr.length;
	//cap = 20; //delete when done with testing
	if ( x + 1 !== cap ) {
		//readURL( arr[x].url, printPath );
		//readListARR.push(readURL( arr[x].url, printPath ));
		setTimeout(() => {
			readListTemp( arr, x + 1, printPath );
		}, 000);
	} else {
		var _printURLObj = function (origin, redirect) {
			this.origin = origin;
			this.redirect = redirect;
		};

		console.log(printPath.length);
		fs.readdir(printPath, (err, files) => {
			let printARR = [];
			for ( let xp = 0; xp < files.length; xp++ ) {
				fs.readFile(printPath + files[xp], 'utf-8', (err, content) => {
					let response = JSON.parse(content);
					let origin = 'https://t.co/' + files[xp].replace('.json', '');
					let responseURL = response.request.uri.host + response.request.uri.pathname;
					let printURLObj = new _printURLObj(response.request.headers.referer, response.request.uri.host + response.request.uri.pathname);
					console.log(origin + '\n' + responseURL + '\n\n');
					printARR.push(printURLObj);
					//console.log("Origin: " + response.request.headers.referer + "\nresponse URL: " + response.request.uri.host + response.request.uri.pathname + "\n\n");
				});
			}
			setTimeout(()=>{
				fs.writeFile(printPath + 'url_redirects.json', JSON.stringify(printARR), (err) => {
					if ( err ) {
						console.log(err);
					}
					console.log('file written');
				});
			}, 5000);
			/*
			files.forEach( (filename) => {
				fs.readFile(printPath + filename, 'utf-8', (err, content) => {
					let response = JSON.parse(content);
					printARR.push('{"origin":"' + response.request.headers.referer + '","redirect":"' + response.request.uri.host + '"}');
					//console.log("Origin: " + response.request.headers.referer + "\nresponse URL: " + response.request.uri.host + response.request.uri.pathname + "\n\n");
				});
			});*/
		});
		/*return false;
		fs.writeFile(printPath + 'url_redirects.json', JSON.stringify(response), (err) => {
			if ( err ) {
				console.log(err);
			}
			console.log('file written');
		});
		return false;*/
	}
};


module.exports = readListTemp;