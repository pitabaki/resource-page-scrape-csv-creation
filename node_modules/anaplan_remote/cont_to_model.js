"use strict";

const htmlToJson = require("html-to-json"),
	url = require("url"),
	fs = require("fs"),
	path = require("path"),
	imageCheck = require("./img_vetting.js"),
	imageModel = require("./img_model.js");

var imgCheck = function (linkage, printFolder) {
	let homeUrl = url.parse(linkage).href;
	//let homeUrl = url.parse("http://info.anaplan.com/ru-anaplan-platform-wp.html").href;
	const promise = htmlToJson.request(homeUrl, {
	  'images': ['img', function ($img) {
	  	if ($img.attr('class') === "img-responsive") {
	    	return $img.attr('src');	
	  	}
	  }],
	  'para': ['p', function ($p) {
	   	return $p.text().replace(/\"/gi, "'");	
	  }],
	  'span': ['span', function($span) {
	  	return $span.text().replace(/\"/gi, "'");	
	  }]
	}, function (err, result) {
		var paragraphArr = [];
		if (result.para.length === 0) {
			for (var y = 0; y < result.span.length; y++ ) {
				if (typeof result.span[y] === "string" && result.span[y].length > 1) {
					let spanContent = result.span[y].replace(/\"/gi, "\"");
					paragraphArr.push("<p>" + spanContent + "</p>");
				}
			}	
		} else {
			for (var n = 0; n < result.para.length; n++) {
				if (typeof result.para[n] === "string" && result.para[n].length > 1) {
					let content = result.para[n].replace(/\"/gi, "\"");
					paragraphArr.push("<p>" + content + "</p>");
				}
			}		
		}
		paragraphArr = paragraphArr.join("");
		for (var x = 0; x < result.images.length; x++) {
			//resultImg = new imageCheck(result.images[x]);
			var resultImg = result.images[x];
			var logoTest = /anaplan_normal1.png$/; 
			if ((resultImg !== undefined) && (logoTest.test(resultImg) !== true)) {
				//console.log(typeof homeUrl);
				var imgLinkContent = new imageModel(resultImg, homeUrl, paragraphArr, true); //(img, link, paragraph, present)
				const linkRemoval = /^http\:\/\/info\.anaplan\.com\//;
				var name = imgLinkContent.link().replace(linkRemoval, "");
				name = name.replace(/\.html$/, "");
				let outputObj = "{\"img\" : \"" + imgLinkContent.img() + "\", \"link\" : \"" + imgLinkContent.link() + "\", \"paragraph\" : \"" + imgLinkContent.paragraph() + "\", \"marketo\" : \"\", \"gaCode\" : \"\"}";
				setTimeout(function(){
					let newPath = path.join(__dirname);
					fs.writeFile(printFolder + name + ".json", outputObj);
				},1000);
				
				//console.log(linkRemoval.test(imgLinkContent.link()));
				//console.log("\n\n" + imgLinkContent.link() + "\n\n" + imgLinkContent.img() + "\n\n" + imgLinkContent.paragraph());
				
			}
		}
		return imgLinkContent;
	});
}

module.exports = imgCheck;